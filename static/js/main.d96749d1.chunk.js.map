{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","align","panel","padding","marginTop","marginBottom","examplecard","position","left","transform","maxWidth","detailtext","shiny","background","border","borderRadius","boxShadow","color","height","App","classes","Container","className","CssBaseline","Paper","style","textAlign","Typography","variant","ratio","src","frameborder","allow","allowfullscreen","gutterBottom","autoPlay","animation","indicators","timeout","navButtonsAlwaysVisible","navButtonsAlwaysInvisible","width","Button","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d96749d1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport 'react-aspect-ratio/aspect-ratio.css'\nimport AspectRatio from 'react-aspect-ratio';\nimport Carousel from 'react-material-ui-carousel'\n\nimport \"fontsource-roboto\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    align: 'center',\n  },\n  panel: {\n    padding: '15px 30px',\n    marginTop: '20px',\n    marginBottom: '20px',\n  },\n  examplecard: {\n    padding: '10px 30px',\n    position: 'relative',\n    left: '50%',\n    transform: 'translate(-50%, 0)',\n    maxWidth: '80%',\n  },\n  detailtext: {\n    padding: '10px 30px',\n    marginTop: '15px',\n    marginBottom: '15px',\n  },\n  shiny: {\n    // I wonder if I can randomize the color lmao\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <CssBaseline />\n      <Paper className={classes.panel} style={{ textAlign:'center' }}>\n        <Typography variant=\"h1\">\n          MemeNet\n        </Typography>\n        <Typography variant=\"h4\">\n          Multimodal Models Make Meme Market Manageable\n        </Typography>\n      </Paper>\n      <Paper className={classes.panel}>\n        <Typography>\n          Artificial Intelligence (A.I.) has been applied in areas such as\n          economics and algorithmic trading to great effect. In recent decades,\n          the rise of viral Internet culture has led to the development of a new\n          global economy: the online \"meme economy\". Drawing from scarce resources\n          (such as creativity, humor, and time), individual producers (meme\n          makers) offer their goods (memes in the form of multimodal ideas) over a\n          centralized marketplace (Internet forums such as subreddits on Reddit)\n          in exchange for currency (Internet points such as Upvotes or Likes).\n          Oftentimes, knowing <em>where</em> to post a meme can greatly affect how\n          well it is received by the Internet community. Posting in a highly apt\n          channel can lead to instant Internet fame, while posting in a suboptimal\n          channel can lead to one's creative work failing to gain attention, or\n          worse, being stolen and reposted by meme thieves. Additionally, posting\n          the same content in several different channels can be considered\n          &quot;spamming&quot; and is negatively regarded. To make this decision easier for\n          the millions of meme creators on the Internet, <strong>we developed a\n          multimodal neural network to predict the single best subreddit that a\n          given meme should be posted to for maximum profit</strong>.\n        </Typography>\n      </Paper>\n      <Paper className={classes.panel} style={{ textAlign:'center' }}>\n        <AspectRatio ratio=\"16 / 9\" style={{ maxWidth: '60%', left: '50%', transform: 'translate(-50%, 0)' }}>\n          <iframe\n            src=\"https://www.youtube-nocookie.com/embed/bZe5J8SVCYQ\"\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowfullscreen>\n          </iframe>\n        </AspectRatio>\n      </Paper>\n      <Paper className={classes.panel}>\n        <Typography variant=\"h4\" style={{ textAlign:'center' }} gutterBottom>\n          Examples\n        </Typography>\n        <div style={{ maxWidth: '80%', position: 'relative', left: '50%', transform: 'translate(-50%, 0)' }}>\n          <Carousel\n            autoPlay={false}\n            animation={\"slide\"}\n            indicators={true}\n            timeout={500}\n            navButtonsAlwaysVisible={true}\n            navButtonsAlwaysInvisible={false}\n          >\n            {\n              [\n                <Paper className={classes.examplecard}>\n                  <Typography>\n                    PAGE 1:\n                  </Typography>\n                  <img\n                    style={{ width:'256px', 'height':'256px' }}\n                    src=\"https://i.pinimg.com/474x/7c/4d/15/7c4d1533480bb4c5911d95699fef5186.jpg\"\n                  />\n                </Paper>,\n                <Paper className={classes.examplecard}>\n                  <Typography>\n                    PAGE 2:\n                  </Typography>\n                  <img\n                    style={{ width:'256px', 'height':'256px' }}\n                    src=\"https://i.pinimg.com/474x/1b/e4/94/1be494c3c065c9c97da3231f7303ee85.jpg\"\n                  />\n                </Paper>,\n                <Paper className={classes.examplecard}>\n                  <Typography>\n                    PAGE 3:\n                  </Typography>\n                  <img\n                    style={{ width:'256px', 'height':'256px' }}\n                    src=\"https://i.pinimg.com/564x/32/58/ba/3258bafbefbc616c5736347001d9bb15.jpg\"\n                  />\n                </Paper>\n              ]\n            }\n          </Carousel>\n        </div>\n      </Paper>\n      <Paper className={classes.panel}>\n        <Typography variant=\"h4\" style={{ textAlign:'center' }} gutterBottom>\n          Try It Yourself!\n        </Typography>\n        <Button className={classes.shiny}>\n          Hello World\n        </Button>\n      </Paper>\n      <Paper className={classes.panel}>\n        <Typography variant=\"h4\" style={{ textAlign:'center' }} gutterBottom>\n          Behind The Scenes\n        </Typography>\n        <Paper className={classes.detailtext}>\n          <Typography variant=\"h5\" style={{ textAlign:'center' }} gutterBottom>\n            Abstract\n          </Typography>\n          <Typography>\n            Deep neural networks are excellent at learning from data that consists\n            of single modalities. For example, convolutional neural networks are\n            highly performant on image classification, and sequence models are the\n            state-of-the-art for text generation. However, media such as Internet\n            memes often consist of multiple modalities. A meme may have an image\n            component and a text component, each of which contribute information\n            about what the meme is trying to convey. To extract features from\n            multimodal data, we leverage multimodal deep learning, in which we use\n            multiple feature extractor networks to learn the separate modes\n            individually, and an aggregator network to combine the features to\n            produce the final output classification. We scrape Reddit meme\n            subreddits for post data, including: subreddit name, upvote/downvote\n            count, images, meme text via OCR (or human OCR), and post titles. We\n            construct a train and test set and evaluate results using a\n            precision/accuracy measure for subreddit name predictions. To optimize\n            our model, we use FAIR’s open source multimodal library, Pythia/MMF\n            (<a href=\"https://mmf.sh/\" rel=\"nofollow\">https://mmf.sh/</a>), and try\n            a variety of model architectures and hyperparameters. Finally, we include\n            our best model for demonstration purposes.\n          </Typography>\n        </Paper>\n        <Paper className={classes.detailtext}>\n          <Typography variant=\"h5\" style={{ textAlign:'center' }} gutterBottom>\n            Methodology\n          </Typography>\n          <Typography>\n            Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n            blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n            Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n            blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n            Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n            blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n            Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n            blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n          </Typography>\n        </Paper>\n        <Paper className={classes.detailtext}>\n          <Typography variant=\"h5\" style={{ textAlign:'center' }} gutterBottom>\n            Experiments\n          </Typography>\n          <Typography>\n            Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n            blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n            Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n            blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n            Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n            blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n            Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n            blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n          </Typography>\n        </Paper>\n        <Paper className={classes.detailtext}>\n          <Typography variant=\"h5\" style={{ textAlign:'center' }} gutterBottom>\n            Results\n          </Typography>\n          <Typography>\n            Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n            blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n            Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n            blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n            Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n            blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n            Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n            blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n          </Typography>\n        </Paper>\n      </Paper>\n      <Paper className={classes.panel}>\n        <Typography variant=\"h4\" style={{ textAlign:'center' }} gutterBottom>\n          Related Work\n        </Typography>\n        <Typography>\n          Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n          blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n          Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n          blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n          Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n          blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n          Bla bla bla Blaaaaa bla bla blah blaah blah Blah blaaah Blaaah Bla bla Blah\n          blah Blah blaaah Blaaah Bla bla Blahbla bla blah blaah blah blaaah Blaaah\n        </Typography>\n      </Paper>\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}